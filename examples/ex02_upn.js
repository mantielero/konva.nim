/* Generated by the Nim Compiler v2.0.2 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI184549387 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI570425653 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI570425356 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI570425352 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555183 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI721420369 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI184549391 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI1073741836 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI570425350 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI570425349 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI570425496 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1392509007 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1392509013 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555180 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555178 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555178 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555178.node = NNI33555178;
NTI33555180.base = NTI33555177;
NTI33555181.base = NTI33555177;
var NNI33555177 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555180, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555181, name: "up", sons: null}]};
NTI33555177.node = NNI33555177;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555177.base = NTI33555173;
NTI33555178.base = NTI33555177;
NTI134217741.base = NTI33555178;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555178;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555178;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
var NNI1392509013 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1392509007, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI1392509013.node = NNI1392509013;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555179 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555179.node = NNI33555179;
NTI33555179.base = NTI33555177;
NTI134217746.base = NTI33555179;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555178;
NTI570425496.base = NTI33554435;
NTI570425350.base = NTI33554449;
var NNI570425349 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "n", len: 0, typ: NTI33554435, name: "n", sons: null}, 
{kind: 1, offset: "title", len: 0, typ: NTI33554449, name: "title", sons: null}, 
{kind: 1, offset: "by", len: 0, typ: NTI570425350, name: "by", sons: null}]};
NTI570425349.node = NNI570425349;
var NNI1073741836 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI184549391, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI184549391, name: "y", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI184549391, name: "width", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI184549391, name: "height", sons: null}, 
{kind: 1, offset: "draggable", len: 0, typ: NTI33554466, name: "draggable", sons: null}]};
NTI1073741836.node = NNI1073741836;
var NNI721420369 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI721420369.node = NNI721420369;
var NNI33555183 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555183.node = NNI33555183;
NTI33555183.base = NTI33555173;
NTI721420369.base = NTI33555183;
NTI1073741836.base = NTI721420369;
NTI570425349.base = NTI1073741836;
var NNI570425352 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI570425352.node = NNI570425352;
var NNI570425356 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI570425356.node = NNI570425356;
NTI570425653.base = NTI184549387;

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function mnewString(len_33557003) {
        var result = new Array(len_33557003);
    for (var i = 0; i < len_33557003; i++) {result[i] = 0;}
    return result;
  

  
}

function raiseException(e_33556653, ename_33556654) {
    e_33556653.name = ename_33556654;
    if ((excHandler == 0)) {
    unhandledException(e_33556653);
    }
    
    throw e_33556653;

  
}

function addInt(a_33557050, b_33557051) {
        var result = a_33557050 + b_33557051;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557324, a_33557325, b_33557326) {
  var result_33557327 = 0;

  BeforeRet: {
    if (((a_33557325 <= i_33557324) && (i_33557324 <= b_33557326))) {
    result_33557327 = i_33557324;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557327;

}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}

function chckIndx(i_33557319, a_33557320, b_33557321) {
  var result_33557322 = 0;

  BeforeRet: {
    if (((a_33557320 <= i_33557319) && (i_33557319 <= b_33557321))) {
    result_33557322 = i_33557319;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557319, a_33557320, b_33557321);
    }
    
  };

  return result_33557322;

}
var ConstSet2 = setConstr(60, 62, 94);
var ConstSet3 = setConstr(60, 62, 94);
var ConstSet4 = setConstr(45, 43, 32);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);

function subInt(a_33557054, b_33557055) {
        var result = a_33557054 - b_33557055;
    checkOverflowInt(result);
    return result;
  

  
}

function divInt(a_33557062, b_33557063) {
        if (b_33557063 == 0) raiseDivByZero();
    if (b_33557063 == -1 && a_33557062 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557062 / b_33557063);
  

  
}

function mulInt(a_33557058, b_33557059) {
        var result = a_33557058 * b_33557059;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet8 = setConstr([65, 90], [97, 122]);

function makeNimstrLit(c_33556895) {
      var result = [];
  for (var i = 0; i < c_33556895.length; ++i) {
    result[i] = c_33556895.charCodeAt(i);
  }
  return result;
  

  
}

function nimCharToStr(x_33556441) {
  var result_33556442 = [];

    result_33556442 = nimCopy(null, mnewString(1), NTI33554449);
    result_33556442[0] = x_33556441;

  return result_33556442;

}

function addChar(x_33557415, c_33557416) {
    x_33557415.push(c_33557416);

  
}

function negInt(a_33557092) {
  var result_33557093 = 0;

    result_33557093 = (a_33557092 * (-1));

  return result_33557093;

}
var objectID_788529329 = [0];

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }
  return result_33556922;

}

function newStage_1207959566(container_1207959567, width_1207959568, height_1207959569) {
  var result_1207959570 = null;

  BeforeRet: {
    var options_1207959571 = {};
    options_1207959571["container"] = toJSStr(container_1207959567);
    options_1207959571["width"] = ((width_1207959568) | 0);
    options_1207959571["height"] = ((height_1207959569) | 0);
    result_1207959570 = new Konva.Stage(options_1207959571);
    break BeforeRet;
  };

  return result_1207959570;

}

function add_33556373(x_33556374, x_33556374_Idx, y_33556375) {
          if (x_33556374[x_33556374_Idx] === null) { x_33556374[x_33556374_Idx] = []; }
      var off = x_33556374[x_33556374_Idx].length;
      x_33556374[x_33556374_Idx].length += y_33556375.length;
      for (var i = 0; i < y_33556375.length; ++i) {
        x_33556374[x_33556374_Idx][off+i] = y_33556375.charCodeAt(i);
      }
    

  
}

function unhandledException(e_33556649) {
    var buf_33556650 = [[]];
    if (!(((e_33556649.message).length == 0))) {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556650[0].push.apply(buf_33556650[0], e_33556649.message);;
    }
    else {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556650[0].push.apply(buf_33556650[0], [32,91]);;
    add_33556373(buf_33556650, 0, e_33556649.name);
    buf_33556650[0].push.apply(buf_33556650[0], [93,10]);;
    var cbuf_33556651 = toJSStr(buf_33556650[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556651);
  }
  else {
    throw cbuf_33556651;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557048) {
        if (a_33557048 > 2147483647 || a_33557048 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet1[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseIndexError(i_33556812, a_33556813, b_33556814) {
    var Temporary1;

    if ((b_33556814 < a_33556813)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_385875976(i_33556812) || [],[32,110,111,116,32,105,110,32] || [],HEX24_385875976(a_33556813) || [],[32,46,46,32] || [],HEX24_385875976(b_33556814) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function addChars_301990090(result_301990092, result_301990092_Idx, x_301990093, start_301990094, n_301990095) {
    var Temporary1;

    var old_301990096 = (result_301990092[result_301990092_Idx]).length;
    if (result_301990092[result_301990092_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_301990095), 0, 2147483647), Temporary1)) { for (var i = result_301990092[result_301990092_Idx].length; i < Temporary1; ++i) result_301990092[result_301990092_Idx].push(0); }
         else {result_301990092[result_301990092_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990110 = 0;
      var i_570426042 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_570426042 < n_301990095)) break Label4;
            iHEX60gensym4_301990110 = i_570426042;
            result_301990092[result_301990092_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_301990092[result_301990092_Idx]).length - 1)] = x_301990093.charCodeAt(chckIndx(addInt(start_301990094, iHEX60gensym4_301990110), 0, (x_301990093).length - 1));
            i_570426042 = addInt(i_570426042, 1);
          }
      };
    };

  
}

function addChars_301990086(result_301990088, result_301990088_Idx, x_301990089) {
    addChars_301990090(result_301990088, result_301990088_Idx, x_301990089, 0, ((x_301990089) == null ? 0 : (x_301990089).length));

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
    addChars_301990086(result_301990112, result_301990112_Idx, ((x_301990113) + ""));

  
}

function addInt_301990129(result_301990130, result_301990130_Idx, x_301990131) {
    addInt_301990111(result_301990130, result_301990130_Idx, BigInt(x_301990131));

  
}

function HEX24_385875976(x_385875977) {
  var result_385875978 = [[]];

    addInt_301990129(result_385875978, 0, x_385875977);

  return result_385875978[0];

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function parseSaturatedNatural_1291846038(s_1291846039, b_1291846040, b_1291846040_Idx) {
      var Temporary1;
          var Temporary4;

  var result_1291846041 = 0;

    var i_1291846042 = 0;
    if (((i_1291846042 < (s_1291846039).length) && (s_1291846039[chckIndx(i_1291846042, 0, (s_1291846039).length - 1)] == 43))) {
    i_1291846042 = addInt(i_1291846042, 1);
    }
    
      if (!(i_1291846042 < (s_1291846039).length)) Temporary1 = false; else {        Temporary1 = (ConstSet6[s_1291846039[chckIndx(i_1291846042, 0, (s_1291846039).length - 1)]] != undefined);      }    if (Temporary1) {
    b_1291846040[b_1291846040_Idx] = 0;
    Label2: {
        Label3: while (true) {
          if (!(i_1291846042 < (s_1291846039).length)) Temporary4 = false; else {            Temporary4 = (ConstSet7[s_1291846039[chckIndx(i_1291846042, 0, (s_1291846039).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_1291846071 = subInt(s_1291846039[chckIndx(i_1291846042, 0, (s_1291846039).length - 1)], 48);
          if ((b_1291846040[b_1291846040_Idx] <= divInt(subInt(2147483647, c_1291846071), 10))) {
          b_1291846040[b_1291846040_Idx] = addInt(mulInt(b_1291846040[b_1291846040_Idx], 10), c_1291846071);
          }
          else {
            b_1291846040[b_1291846040_Idx] = 2147483647;
          }
          
          i_1291846042 = addInt(i_1291846042, 1);
          Label5: {
              Label6: while (true) {
              if (!((i_1291846042 < (s_1291846039).length) && (s_1291846039[chckIndx(i_1291846042, 0, (s_1291846039).length - 1)] == 95))) break Label6;
                i_1291846042 = addInt(i_1291846042, 1);
              }
          };
        }
    };
    result_1291846041 = i_1291846042;
    }
    

  return result_1291846041;

}

function parseSaturatedNatural_1291846544(s_1291846545, b_1291846546, b_1291846546_Idx, start_1291846547) {
  var result_1291846548 = 0;

    result_1291846548 = parseSaturatedNatural_1291846038((s_1291846545.slice(start_1291846547, (s_1291846545).length - 1 + 1)), b_1291846546, b_1291846546_Idx);

  return result_1291846548;

}

function HEX5BHEX5D_1375733019(s_1375733022, x_1375733023) {
  var result_1375733024 = [];

    var a_1375733026 = x_1375733023.a;
    var L_1375733028 = addInt(subInt(subInt((s_1375733022).length, x_1375733023.b), a_1375733026), 1);
    result_1375733024 = nimCopy(null, mnewString(chckRange(L_1375733028, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_1375733033 = 0;
      var i_570426047 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570426047 < L_1375733028)) break Label3;
            i_1375733033 = i_570426047;
            result_1375733024[chckIndx(i_1375733033, 0, (result_1375733024).length - 1)] = s_1375733022[chckIndx(addInt(i_1375733033, a_1375733026), 0, (s_1375733022).length - 1)];
            i_570426047 = addInt(i_570426047, 1);
          }
      };
    };

  return result_1375733024;

}

function HEX2EHEX2E_1392509032(a_1392509035, b_1392509036) {
  var result_1392509039 = ({a: 0, b: 0});

    result_1392509039 = nimCopy(result_1392509039, {a: a_1392509035, b: b_1392509036}, NTI1392509013);

  return result_1392509039;

}

function parseStandardFormatSpecifier_1275068474(s_1275068475, start_1275068476, ignoreUnknownSuffix_1275068477) {
      var Temporary1;
      var Temporary2;

  var result_1275068478 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_1275068478.fill = 32;
    result_1275068478.align = 0;
    result_1275068478.sign = 45;
    var i_1275068480 = start_1275068476;
    if (((addInt(i_1275068480, 1) < (s_1275068475).length) && (ConstSet2[s_1275068475[chckIndx(addInt(i_1275068480, 1), 0, (s_1275068475).length - 1)]] != undefined))) {
    result_1275068478.fill = s_1275068475[chckIndx(i_1275068480, 0, (s_1275068475).length - 1)];
    result_1275068478.align = s_1275068475[chckIndx(addInt(i_1275068480, 1), 0, (s_1275068475).length - 1)];
    i_1275068480 = addInt(i_1275068480, 2);
    }
    else {
    if (((i_1275068480 < (s_1275068475).length) && (ConstSet3[s_1275068475[chckIndx(i_1275068480, 0, (s_1275068475).length - 1)]] != undefined))) {
    result_1275068478.align = s_1275068475[chckIndx(i_1275068480, 0, (s_1275068475).length - 1)];
    i_1275068480 = addInt(i_1275068480, 1);
    }
    }
    if (((i_1275068480 < (s_1275068475).length) && (ConstSet4[s_1275068475[chckIndx(i_1275068480, 0, (s_1275068475).length - 1)]] != undefined))) {
    result_1275068478.sign = s_1275068475[chckIndx(i_1275068480, 0, (s_1275068475).length - 1)];
    i_1275068480 = addInt(i_1275068480, 1);
    }
    
    if (((i_1275068480 < (s_1275068475).length) && (s_1275068475[chckIndx(i_1275068480, 0, (s_1275068475).length - 1)] == 35))) {
    result_1275068478.alternateForm = true;
    i_1275068480 = addInt(i_1275068480, 1);
    }
    
      if (!((addInt(i_1275068480, 1) < (s_1275068475).length) && (s_1275068475[chckIndx(i_1275068480, 0, (s_1275068475).length - 1)] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet5[s_1275068475[chckIndx(addInt(i_1275068480, 1), 0, (s_1275068475).length - 1)]] != undefined);      }    if (Temporary1) {
    result_1275068478.padWithZero = true;
    i_1275068480 = addInt(i_1275068480, 1);
    }
    
    var parsedLength_1275068522 = parseSaturatedNatural_1291846544(s_1275068475, result_1275068478, "minimumWidth", i_1275068480);
    i_1275068480 = addInt(i_1275068480, parsedLength_1275068522);
    if (((i_1275068480 < (s_1275068475).length) && (s_1275068475[chckIndx(i_1275068480, 0, (s_1275068475).length - 1)] == 46))) {
    i_1275068480 = addInt(i_1275068480, 1);
    var parsedLengthB_1275068533 = parseSaturatedNatural_1291846544(s_1275068475, result_1275068478, "precision", i_1275068480);
    i_1275068480 = addInt(i_1275068480, parsedLengthB_1275068533);
    }
    else {
      result_1275068478.precision = (-1);
    }
    
      if (!(i_1275068480 < (s_1275068475).length)) Temporary2 = false; else {        Temporary2 = (ConstSet8[s_1275068475[chckIndx(i_1275068480, 0, (s_1275068475).length - 1)]] != undefined);      }    if (Temporary2) {
    result_1275068478.typ = s_1275068475[chckIndx(i_1275068480, 0, (s_1275068475).length - 1)];
    i_1275068480 = addInt(i_1275068480, 1);
    }
    
    result_1275068478.endPosition = i_1275068480;
    if ((!((i_1275068480 == (s_1275068475).length)) && !(ignoreUnknownSuffix_1275068477))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,44,32,99,97,110,110,111,116,32,112,97,114,115,101,58,32] || []).concat(HEX5BHEX5D_1375733019(s_1275068475, HEX2EHEX2E_1392509032(i_1275068480, 1)) || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_1275068478;

}

function sysFatal_268435501(message_268435504) {
    raiseException({message: nimCopy(null, message_268435504, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_268435499(msg_268435500) {
    sysFatal_268435501(msg_268435500);

  
}

function failedAssertImpl_268435541(msg_268435542) {
    raiseAssert_268435499(msg_268435542);

  
}

function mkDigit_1275068421(v_1275068422, typ_1275068423) {
      var Temporary1;

  var result_1275068424 = [];

    if (!((v_1275068422 < 26))) {
    failedAssertImpl_268435541([115,116,114,102,111,114,109,97,116,46,110,105,109,40,51,50,52,44,32,57,41,32,96,118,32,60,32,50,54,96,32]);
    }
    
    if ((v_1275068422 < 10)) {
    result_1275068424 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_1275068422), 0, 255)), NTI33554449);
    }
    else {
      if ((typ_1275068423 == 120)) {
      Temporary1 = 97;
      }
      else {
      Temporary1 = 65;
      }
      
      result_1275068424 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Temporary1, v_1275068422), 10), 0, 255)), NTI33554449);
    }
    

  return result_1275068424;

}

function nsuRepeatChar(c_1375732833, count_1375732834) {
  var result_1375732835 = [];

    result_1375732835 = nimCopy(null, mnewString(count_1375732834), NTI33554449);
    Label1: {
      var i_1375732840 = 0;
      var colontmp__570426059 = 0;
      colontmp__570426059 = subInt(count_1375732834, 1);
      var res_570426060 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_570426060 <= colontmp__570426059)) break Label3;
            i_1375732840 = res_570426060;
            result_1375732835[chckIndx(i_1375732840, 0, (result_1375732835).length - 1)] = c_1375732833;
            res_570426060 = addInt(res_570426060, 1);
          }
      };
    };

  return result_1375732835;

}

function formatInt_570425472(n_570425474, radix_570425475, spec_570425476) {
    var Temporary1;

  var result_570425477 = [];

    var n_570425480 = BigInt(n_570425474);
    var negative_570425481 = (n_570425480 < 0n);
    if (negative_570425481) {
    Temporary1 = BigInt.asUintN(64, (BigInt.asUintN(64, ~(n_570425480)) + 1n));
    }
    else {
    Temporary1 = BigInt.asUintN(64, n_570425480);
    }
    
    var v_570425482 = Temporary1;
    var xx_570425483 = [];
    if (spec_570425476.alternateForm) {
    switch (spec_570425476.typ) {
    case 88:
      xx_570425483 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 120:
      xx_570425483 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 98:
      xx_570425483 = nimCopy(null, [48,98], NTI33554449);
      break;
    case 111:
      xx_570425483 = nimCopy(null, [48,111], NTI33554449);
      break;
    default: 
      break;
    }
    }
    
    if ((v_570425482 == 0n)) {
    result_570425477 = nimCopy(null, [48], NTI33554449);
    }
    else {
      result_570425477 = nimCopy(null, [], NTI33554449);
      Label2: {
          Label3: while (true) {
          if (!(0n < v_570425482)) break Label3;
            var d_570425484 = (v_570425482 % BigInt.asUintN(64, BigInt(radix_570425475)));
            v_570425482 = BigInt.asUintN(64, (v_570425482 / BigInt.asUintN(64, BigInt(radix_570425475))));
            result_570425477.push.apply(result_570425477, mkDigit_1275068421(chckRange(Number(d_570425484), (-2147483648), 2147483647), spec_570425476.typ));;
          }
      };
      Label4: {
        var idx_570425489 = 0;
        var colontmp__570426051 = 0;
        colontmp__570426051 = divInt((result_570425477).length, 2);
        var i_570426052 = 0;
        Label5: {
            Label6: while (true) {
            if (!(i_570426052 < colontmp__570426051)) break Label6;
              idx_570425489 = i_570426052;
              var Temporary7 = result_570425477[chckIndx(idx_570425489, 0, (result_570425477).length - 1)]; result_570425477[chckIndx(idx_570425489, 0, (result_570425477).length - 1)] = result_570425477[chckIndx(subInt(subInt((result_570425477).length, idx_570425489), 1), 0, (result_570425477).length - 1)]; result_570425477[chckIndx(subInt(subInt((result_570425477).length, idx_570425489), 1), 0, (result_570425477).length - 1)] = Temporary7;              i_570426052 = addInt(i_570426052, 1);
            }
        };
      };
    }
    
    if (spec_570425476.padWithZero) {
    var sign_570425494 = (negative_570425481 || !((spec_570425476.sign == 45)));
    var toFill_570425498 = subInt(subInt(subInt(spec_570425476.minimumWidth, (result_570425477).length), (xx_570425483).length), (sign_570425494 ? 1 : 0));
    if ((0 < toFill_570425498)) {
    result_570425477 = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_570425498, 0, 2147483647)) || []).concat(result_570425477 || []), NTI33554449);
    }
    
    }
    
    if (negative_570425481) {
    result_570425477 = nimCopy(null, ([45] || []).concat(xx_570425483 || [],result_570425477 || []), NTI33554449);
    }
    else {
    if (!((spec_570425476.sign == 45))) {
    result_570425477 = nimCopy(null, [spec_570425476.sign].concat(xx_570425483 || [],result_570425477 || []), NTI33554449);
    }
    else {
      result_570425477 = nimCopy(null, (xx_570425483 || []).concat(result_570425477 || []), NTI33554449);
    }
    }
    if ((spec_570425476.align == 60)) {
    Label8: {
      var i_570425503 = 0;
      var colontmp__570426055 = 0;
      colontmp__570426055 = (result_570425477).length;
      var i_570426056 = colontmp__570426055;
      Label9: {
          Label10: while (true) {
          if (!(i_570426056 < spec_570425476.minimumWidth)) break Label10;
            i_570425503 = i_570426056;
            addChar(result_570425477, spec_570425476.fill);;
            i_570426056 = addInt(i_570426056, 1);
          }
      };
    };
    }
    else {
      var toFill_570425504 = subInt(spec_570425476.minimumWidth, (result_570425477).length);
      if ((spec_570425476.align == 94)) {
      var half_570425505 = divInt(toFill_570425504, 2);
      result_570425477 = nimCopy(null, (nsuRepeatChar(spec_570425476.fill, chckRange(half_570425505, 0, 2147483647)) || []).concat(result_570425477 || [],nsuRepeatChar(spec_570425476.fill, chckRange(subInt(toFill_570425504, half_570425505), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        if ((0 < toFill_570425504)) {
        result_570425477 = nimCopy(null, (nsuRepeatChar(spec_570425476.fill, chckRange(toFill_570425504, 0, 2147483647)) || []).concat(result_570425477 || []), NTI33554449);
        }
        
      }
      
    }
    

  return result_570425477;

}

function formatValue_570425464(result_570425466, result_570425466_Idx, value_570425467, specifier_570425468) {
  BeforeRet: {
    if (((specifier_570425468).length == 0)) {
    result_570425466[result_570425466_Idx].push.apply(result_570425466[result_570425466_Idx], HEX24_385875976(value_570425467));;
    break BeforeRet;
    }
    
    var spec_570425469 = parseStandardFormatSpecifier_1275068474(specifier_570425468, 0, false);
    var radix_570425470 = 10;
    switch (spec_570425469.typ) {
    case 120:
    case 88:
      radix_570425470 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      radix_570425470 = 2;
      break;
    case 111:
      radix_570425470 = 8;
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_570425469.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_570425466[result_570425466_Idx].push.apply(result_570425466[result_570425466_Idx], formatInt_570425472(value_570425467, radix_570425470, spec_570425469));;
  };

  
}

function toCdouble_570425681(val_570425683) {
  var result_570425684 = 0.0;

    result_570425684 = val_570425683;

  return result_570425684;

}

function newStep_570425388(val_570425389) {
    
function innerHEX60gensym17_570425418() {
      var result_570425419 = null;

      BeforeRet: {
        var a_570425420 = null;
        a_570425420 = {};
        a_570425420.width = group_570425404.width();
        Label1: {
          var fmtRes_570425459 = [mnewString(0)];
          formatValue_570425464(fmtRes_570425459, 0, val_570425389.n, []);
        };
        a_570425420.text = toJSStr(fmtRes_570425459[0]);
        a_570425420.fontSize = 25;
        a_570425420.fontFamily = "Calibri";
        a_570425420.fill = "darkgray";
        a_570425420.align = "left";
        a_570425420.padding = 10;
        result_570425419 = a_570425420;
        break BeforeRet;
      };

      return result_570425419;

    }
    
function innerHEX60gensym40_570425514() {
      var result_570425515 = null;

      BeforeRet: {
        var a_570425516 = null;
        a_570425516 = {};
        a_570425516.width = group_570425404.width();
        a_570425516.text = toJSStr(val_570425389.title);
        a_570425516.fontSize = ((stepNumberH_570425405) | 0);
        a_570425516.fontFamily = "Arial";
        a_570425516.fill = "black";
        a_570425516.align = "center";
        a_570425516.padding = 10;
        result_570425515 = a_570425516;
        break BeforeRet;
      };

      return result_570425515;

    }
            
function innerHEX60gensym53_570425565() {
              var result_570425566 = null;

              BeforeRet: {
                var a_570425567 = null;
                a_570425567 = {};
                a_570425567.points = nimCopy(null, [0, h_570425540, ((group_570425404.width()) | 0), h_570425540], NTI570425496);
                a_570425567.stroke = "black";
                a_570425567.strokeWidth = 1;
                result_570425566 = a_570425567;
                break BeforeRet;
              };

              return result_570425566;

            }
            
function innerHEX60gensym70_570425625() {
              var result_570425626 = null;

              BeforeRet: {
                var a_570425627 = null;
                a_570425627 = {};
                a_570425627.width = group_570425404.width();
                a_570425627.text = toJSStr(actionee_570425562);
                a_570425627.fontSize = 20;
                a_570425627.fontFamily = "Arial";
                a_570425627.fill = "blue";
                a_570425627.align = "left";
                a_570425627.padding = 10;
                result_570425626 = a_570425627;
                break BeforeRet;
              };

              return result_570425626;

            }
    
function innerHEX60gensym90_570425659() {
      var result_570425660 = null;

      BeforeRet: {
        var a_570425661 = null;
        a_570425661 = {};
        a_570425661.width = group_570425404.width();
        a_570425661.height = h_570425540;
        a_570425661.fill = "lightgray";
        a_570425661.stroke = "black";
        a_570425661.strokeWidth = 4.0;
        a_570425661.shadowBlur = 10;
        a_570425661.cornerRadius = 10.0;
        result_570425660 = a_570425661;
        break BeforeRet;
      };

      return result_570425660;

    }

  var result_570425390 = null;

  BeforeRet: {
    var newVal_570425391 = val_570425389;
    if (!((0.0 < val_570425389.width))) {
    newVal_570425391["width"] = 200;
    }
    
    if (!(val_570425389.draggable)) {
    newVal_570425391["draggable"] = true;
    }
    
    var headerHeight_570425402 = 50;
    var titleHeight_570425403 = 100;
    var group_570425404 = new Konva.Group(newVal_570425391);
    var stepNumberH_570425405 = 20;
    var stepNumber_570425511 = new Konva.Text(innerHEX60gensym17_570425418());
    group_570425404.add(stepNumber_570425511);
    var stepTitle_570425537 = new Konva.Text(innerHEX60gensym40_570425514());
    stepTitle_570425537.offsetY(((negInt(headerHeight_570425402)) | 0));
    group_570425404.add(stepTitle_570425537);
    var actioneeH_570425538 = 50;
    var n_570425539 = 0;
    var h_570425540 = addInt(headerHeight_570425402, titleHeight_570425403);
    Label1: {
      var actionee_570425562 = [];
      var i_570426035 = 0;
      var L_570426036 = (val_570425389.by).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570426035 < L_570426036)) break Label3;
            actionee_570425562 = val_570425389.by[chckIndx(i_570426035, 0, (val_570425389.by).length - 1)];
            var line_570425622 = new Konva.Line(innerHEX60gensym53_570425565());
            var actioneeTxt_570425648 = new Konva.Text(innerHEX60gensym70_570425625());
            actioneeTxt_570425648.offsetY(((negInt(h_570425540)) | 0));
            h_570425540 = addInt(h_570425540, ((actioneeTxt_570425648.height()) | 0));
            group_570425404.add(line_570425622);
            group_570425404.add(actioneeTxt_570425648);
            n_570425539 = addInt(n_570425539, 1);
            i_570426035 = addInt(i_570426035, 1);
            if (!(((val_570425389.by).length == L_570426036))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (!((val_570425389.height == 0.0))) {
    h_570425540 = ((val_570425389.height) | 0);
    }
    
    var rect_570425680 = new Konva.Rect(innerHEX60gensym90_570425659());
    group_570425404.height(toCdouble_570425681(h_570425540));
    group_570425404.add(rect_570425680);
    rect_570425680.zIndex(0);
    result_570425390 = group_570425404;
    break BeforeRet;
  };

  return result_570425390;

}

function getRightAnchor_570425354(step_570425355) {
  var result_570425358 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var w_570425359 = step_570425355.width();
    var h_570425360 = step_570425355.height();
    h_570425360 = 150.0;
    var x_570425361 = step_570425355.x();
    var y_570425362 = step_570425355.y();
    var colontmp__570426062 = (((x_570425361 + w_570425359)) | 0);
    var colontmp__570426063 = (((y_570425362 + (h_570425360 / 2.0))) | 0);
    result_570425358 = nimCopy(result_570425358, {Field0: colontmp__570426062, Field1: colontmp__570426063}, NTI570425352);
    break BeforeRet;
  };

  return result_570425358;

}

function getLeftAnchor_570425371(step_570425372) {
  var result_570425375 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var w_570425376 = step_570425372.width();
    var h_570425377 = step_570425372.height();
    h_570425377 = 150.0;
    var x_570425378 = step_570425372.x();
    var y_570425379 = step_570425372.y();
    var colontmp__570426064 = ((x_570425378) | 0);
    var colontmp__570426065 = (((y_570425379 + (h_570425377 / 2.0))) | 0);
    result_570425375 = nimCopy(result_570425375, {Field0: colontmp__570426064, Field1: colontmp__570426065}, NTI570425356);
    break BeforeRet;
  };

  return result_570425375;

}

function connect_570425802(step1_570425803, step2_570425804) {
    
function innerHEX60gensym99_570425810() {
      var result_570425811 = null;

      BeforeRet: {
        var a_570425812 = null;
        a_570425812 = {};
        a_570425812.x = toCdouble_570425681(start_570425806.Field0);
        a_570425812.y = toCdouble_570425681(start_570425806.Field1);
        a_570425812.width = toCdouble_570425681(subInt(ending_570425807.Field0, start_570425806.Field0));
        result_570425811 = a_570425812;
        break BeforeRet;
      };

      return result_570425811;

    }
    
function innerHEX60gensym114_570425825() {
      var result_570425826 = null;

      BeforeRet: {
        var a_570425827 = null;
        a_570425827 = {};
        a_570425827.x = 0.0;
        a_570425827.y = 0.0;
        a_570425827.radius = 6.0;
        a_570425827.stroke = "black";
        a_570425827.fill = "white";
        a_570425827.strokeWidth = 4;
        result_570425826 = a_570425827;
        break BeforeRet;
      };

      return result_570425826;

    }
    
function innerHEX60gensym129_570425847() {
      var result_570425848 = null;

      BeforeRet: {
        var a_570425849 = null;
        a_570425849 = {};
        a_570425849.x = group_570425822.width();
        a_570425849.y = 0.0;
        a_570425849.radius = 6.0;
        a_570425849.stroke = "black";
        a_570425849.fill = "white";
        a_570425849.strokeWidth = 4;
        result_570425848 = a_570425849;
        break BeforeRet;
      };

      return result_570425848;

    }
    
function innerHEX60gensym138_570425855() {
      var result_570425856 = null;

      BeforeRet: {
        var a_570425857 = null;
        a_570425857 = {};
        a_570425857.points = nimCopy(null, [6, 0, ((subInt(subInt(((group_570425822.width()) | 0), 6), 4)) | 0), 0], NTI570425653);
        a_570425857.stroke = "black";
        a_570425857.strokeWidth = 4;
        result_570425856 = a_570425857;
        break BeforeRet;
      };

      return result_570425856;

    }

  var result_570425805 = null;

  BeforeRet: {
    var start_570425806 = getRightAnchor_570425354(step1_570425803);
    var ending_570425807 = getLeftAnchor_570425371(step2_570425804);
    console.log(start_570425806);
    console.log(ending_570425807);
    var group_570425822 = new Konva.Group(innerHEX60gensym99_570425810());
    var circle1_570425844 = new Konva.Circle(innerHEX60gensym114_570425825());
    var circle2_570425852 = new Konva.Circle(innerHEX60gensym129_570425847());
    var arrow_570425912 = new Konva.Arrow(innerHEX60gensym138_570425855());
    group_570425822.add(circle1_570425844);
    group_570425822.add(circle2_570425852);
    group_570425822.add(arrow_570425912);
    result_570425805 = group_570425822;
    break BeforeRet;
  };

  return result_570425805;

}

function main_570425951() {
    var stage_570425952 = newStage_1207959566([99,111,110,116,97,105,110,101,114], 1000, 800);
    var layer_570425953 = new Konva.Layer();
    var step1_570425958 = newStep_570425388({n: 1, title: [82,101,113,117,101,115,116,32,115,117,112,112,111,114,116], by: [[67,117,115,116,111,109,101,114], [84,101,99,104,110,105,99,97,108,32,83,117,112,112,111,114,116]], m_type: NTI570425349, x: 0.0, y: 0.0, width: 0.0, height: 0.0, draggable: false});
    var step2_570425963 = newStep_570425388({n: 2, title: [82,101,115,111,108,118,101,32,115,97,108,101,115,32,115,117,112,112,111,114,116,32,114,101,113,117,101,115,116], by: [[83,97,108,101,115]], x: 300.0, m_type: NTI570425349, y: 0.0, width: 0.0, height: 0.0, draggable: false});
    var arrow_570425964 = connect_570425802(step1_570425958, step2_570425963);
    layer_570425953.add(step1_570425958);
    layer_570425953.add(step2_570425963);
    layer_570425953.add(arrow_570425964);
    stage_570425952.add(layer_570425953);
    layer_570425953.draw();
    console.log(getRightAnchor_570425354(step1_570425958));

  
}
main_570425951();
